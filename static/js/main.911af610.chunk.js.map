{"version":3,"sources":["Editor.jsx","App.js","serviceWorker.js","index.js"],"names":["itemType","itemValue","Editor","props","state","name","cost","description","type","image","image_data","attack","health","movement","rarity","typeSelectionText","valueSelectionText","itemsList","itemCounter","cardRef","React","createRef","input","this","setState","undefined","length","axios","get","responseType","then","response","Buffer","from","data","toString","catch","err","console","log","onClick","e","value","keyValue","className","id","onChange","event","target","getImage","style","height","display","alignItems","float","backgroundColor","preventDefault","html2canvas","current","canvas","newImage","toDataURL","saveAs","marginRight","marginTop","pointerEvents","getDropdownTypeElement","getDropdownValueElement","position","width","marginLeft","paddinTop","getNewBlock","ref","grid","src","map","ItemSuper","removeMe","filter","x","key","Component","onRelease","lastX","randomColor","Math","floor","random","onStop","background","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.911af610.chunk.js","sourcesContent":["import React from 'react';\nimport './Editor.css';\nimport html2canvas from 'html2canvas';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport DraggableCore from \"react-draggable\";\n\nconst itemType = {\n\t\"One Block\": \"oneBlock\",\n\t\"Two Long Block\": \"twoBlock\",\n\t\"Three Long Block\": \"threeBlock\",\n\t\"Four Long Block\": \"fourBlock\",\n\t\"Five Long Block\": \"fiveBlock\",\n\t\"Six Long Block\": \"sixBlock\",\n\t\"Seven Long Block\": \"sevenBlock\",\n\t\"Eight Long Block\": \"eightBlock\",\n\t\"Double Row Block\": \"doubleBlock\"\n}\n\nconst itemValue = {\n\t\"Name\": \"name\",\n\t\"Cost\": \"cost\",\n\t\"Type\": \"type\",\n\t\"Attack\": \"attack\",\n\t\"Health\": \"health\",\n\t\"Movement\": \"movement\",\n\t\"Rarity\": \"rarity\",\n\t\"Description\": \"description\"\n}\n\nclass Editor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tcost: '',\n\t\t\tdescription: '',\n\t\t\ttype: '',\n\t\t\timage: '',\n\t\t\timage_data: '',\n\t\t\tattack: '',\n\t\t\thealth: '',\n\t\t\tmovement: '',\n\t\t\trarity: '',\n\t\t\ttypeSelectionText: \"Type Selection\",\n\t\t\tvalueSelectionText: \"Value Selection\",\n\t\t\titemsList: [],\n\t\t\titemCounter: 0\n\t\t};\n\t\tthis.cardRef = React.createRef();\n\t}\n\n\tgetImage(input) {\n\t\tthis.setState({ image: input })\n\n\t\tif (input !== undefined && input.length > 10) { // @TODO: URL CHECK\n\t\t\tconst res = axios\n\t\t\t\t.get(input, { responseType: 'arraybuffer' })\n\t\t\t\t.then(response => Buffer.from(response.data, 'binary').toString('base64') )\n\t\t\t\t.then(data => this.setState({ image_data: data }))\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log('err: ', err)\n\t\t\t})\n\t\t}\n\t}\n\n\tgetDropdownTypeElement (type) {\n\t\treturn <a onClick={(e) => {\n\t\t\tthis.setState({ typeSelectionText: type })\n\t\t}}>\n\t\t\t{ type }\n\t\t</a>;\n\t}\n\n\tgetDropdownValueElement (value) {\n\t\treturn <a onClick={(e) => {\n\t\t\tthis.setState({ valueSelectionText: value })\n\t\t}}>\n\t\t\t{ value }\n\t\t</a>;\n\t}\n\n\tgetNewBlock (value, type, keyValue) {\n\t\tthis.setState({ itemsList: [\n\t\t\t...this.state.itemsList,\n\t\t\t{ value,type,keyValue }\n\t\t]});\n\t}\n\n\trender() {\n\t\tconst image_data = `data:image/png;base64, ${this.state.image_data}`;\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"fields-container\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<div className=\"FormFieldTopLeft\">\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Name</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Cost</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Type</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Image URL</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Attack</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Health</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Movement</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Rarity</label></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<label className=\"labelTop\">Description</label></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t \t<div className=\"FormFieldTopRight\">\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<input id=\"card-name\" className=\"FormText\"\n\t\t\t\t\t\t\t\t\t \tonChange={event => this.setState({ name: event.target.value })}/></div>\n\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t\t\t\t\t<input id=\"card-cost\" className=\"FormText\"\n\t\t\t\t\t\t\t     \tonChange={event => this.setState({ cost: event.target.value })}/></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t \t\t\t\t<input id=\"card-type\" className=\"FormText\"\n\t\t\t \t\t\t\t\t\t \tonChange={event => this.setState({ type: event.target.value })}/></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t \t\t\t\t<input id=\"card-name\" className=\"FormText\"\n\t\t\t \t\t\t\t\t\t\tonChange={event => this.getImage(event.target.value)}/></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t \t\t\t\t<input id=\"card-cost\" className=\"FormText\"\n\t\t\t \t\t\t\t\t\t\tonChange={event => this.setState({ attack: event.target.value })}/></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t \t\t\t \t<input id=\"card-type\" className=\"FormText\"\n\t\t\t \t\t\t \t\t\t\tonChange={event => this.setState({ health: event.target.value })}/></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t \t\t\t \t<input id=\"card-type\" className=\"FormText\"\n\t\t\t \t\t\t \t\t\t\tonChange={event => this.setState({ movement: event.target.value })}/></div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"rowContainer\">\n\t\t\t \t\t\t \t<input id=\"card-type\" className=\"FormText\"\n\t\t\t \t\t\t \t\t\t\tonChange={event => this.setState({ rarity: event.target.value })}/></div>\n\t\t\t\t\t\t\t<textarea id=\"card-description\" className=\"formTextfield\"\n\t\t\t\t\t\t\t\t\t\tonChange={event => this.setState({ description: event.target.value })}/>\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t  height: \"40px\",\n\t\t\t\t\t\t\t  display: \"flex\",\n\t\t\t\t\t\t\t  alignItems: \"center\",\n\t\t\t\t\t\t\tfloat: \"right\"}}>\n\t\t\t\t\t\t\t<button id=\"download\" className=\"dropdown-button\" style={{ backgroundColor: \"#e74c3c\"}} onClick={\n\t\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\thtml2canvas(this.cardRef.current)\n\t\t\t\t\t\t\t\t\t\t.then((canvas) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('MENTÉS', this.cardRef.current);\n\t\t\t\t\t\t\t\t\t\t\tconst newImage = canvas.toDataURL('image/png');\n\t\t\t\t\t\t\t\t\t\t\treturn saveAs(newImage, `${this.state.name}.png`);\n\t\t\t\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\t\t\tconsole.log('err: ', err);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"dropdown\" style={{ marginRight: \"40px\", marginTop: \"20px\" }}>\n  \t\t\t\t\t\t<button className=\"dropdown-button\" style={{ pointerEvents: \"none\" }}> {this.state.typeSelectionText} </button>\n  \t\t\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"One Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Two Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Three Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Four Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Five Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Six Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Eight Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Seven Long Block\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownTypeElement(\"Double Row Block\") }\n  \t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"dropdown\">\n  \t\t\t\t\t\t<button className=\"dropdown-button\" style={{ pointerEvents: \"none\" }}> {this.state.valueSelectionText} </button>\n  \t\t\t\t\t\t\t<div className=\"dropdown-content\">\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Name\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Cost\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Type\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Attack\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Health\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Movement\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Rarity\") }\n\t\t\t\t\t\t\t\t\t{ this.getDropdownValueElement(\"Description\") }\n  \t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button className=\"dropdown-button\" style={{ position: \"relative\", width: \"80px\", marginLeft: \"40px\", paddinTop: \"20px\"}} onClick={\n\t\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tthis.setState({ itemCounter: this.state.itemCounter + 1 });\n\t\t\t\t\t\t\t\t{ this.getNewBlock( itemValue[this.state.valueSelectionText], this.state.typeSelectionText, \"newItem_\" + this.state.itemCounter ) }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\tBuild\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"card-container\" ref={this.cardRef}>\n\t\t\t\t\t<div id=\"card\">\n\t\t\t\t\t\t<DraggableCore grid={ [50, 50]}>\n\t\t\t\t\t\t<div style={{height: \"500px\", width: \"400px\"}}>\n\t\t\t\t\t\t\t<img className=\"card-image\" src={image_data} /></div>\n\t\t\t\t\t\t</DraggableCore>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ this.state.itemsList\n\t\t\t\t\t\t\t\t\t.map(({value, type, keyValue}) =>\n\t\t\t\t\t\t\t\t\t\t<ItemSuper removeMe={() => {this.setState({itemsList: this.state.itemsList.filter(x => x.keyValue !== keyValue)})}}\n\t\t\t\t\t\t\t\t\t\t   type={ itemType[type]} value={this.state[value]} key={keyValue}/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"remove-container\"/>\n\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nclass ItemSuper extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.randomColor = Math.floor(Math.random()*16777215).toString(16);\n\t}\n\n\tonRelease = (e, position) => {\n    const x = position.lastX;\n\t\tif (x > 400) {\n\t\t\tthis.props.removeMe();\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n  };\n\n\trender() {\n\t\t return (\n\t\t\t <DraggableCore onStop={this.onRelease} grid={ [50, 50]}>\n\t\t\t \t<div>\n\t\t\t\t\t<div className={ this.props.type } style={{ background: \"#\" + this.randomColor }}>\n\t\t\t\t\t\t{ this.props.value }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</DraggableCore>\n\t\t);\n\t}\n}\n\nexport default Editor;\n","import React from 'react';\nimport './App.css';\nimport Editor from './Editor';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}